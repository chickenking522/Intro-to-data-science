filename <- "~/Downloads/NYChousing.csv"
housing<-read.csv(file = filename,header = TRUE)
apply(is.na(housing), 2, sum)
housingvalue_no_na<-na.omit(housing$Value)
housingvalue_no_na
nrow(housing)-nrow(housing_no_na)
nrow(housing)-nrow(housingvalue_no_na)
nrow(housingvalue_no_na)
housingvalue_no_na<-na.omit(Value)
housingvalue_no_na<-na.omit(housing$Value)
nrow(housing)-nrow(housingvalue_no_na)
filename <- "~/Downloads/NYChousing.csv"
housing<-read.csv(file = filename,header = TRUE)
c(nrow(housing),ncol(housing))
apply(is.na(housing), 2, sum)
housingvalue_no_na<-subset(housing, housing$Value != "NA")
nrow(housing)-nrow(housingvalue_no_na)
housing$logValue<-housing$logValue <-as.numeric(log(housing$Value))
summary(housing$logValue)
housing$logValue<-housing$logValue
summary(housing$logValue)
housing$logUnits<-housing$UnitCount <-as.numeric(log(housing$UnitCount))
housing$logUnits <- log(housing$UnitCount)
housing$after1950<-as.character(ifelse(housing$YearBuilt == "1950"|housing$YearBuilt > "1950", "TRUE", "FALSE"))
plot(housing$logUnits,housing$logValue,xlab ="logUnits",ylab = "logValue" )
plot(housing$logUnits, housing$logValue, col = factor(housing$after1950),
xlab = "log of Property Units", ylab = "log of Property Value")
legend("bottomright", legend=levels(factor(housing$after1950)),
fill=unique(factor(housing$after1950)))
cor(housing$logUnits,housing$logValue, use = "complete.obs")
cor(housing$logUnits[housing$Borough=="Manhattan"],housing$logValue[housing$Borough=="Manhattan"], use = "complete.obs")
cor(housing$logUnits[housing$Borough=="Brooklyn"],housing$logValue[housing$Borough=="Brooklyn"], use = "complete.obs")
cor(housing$logUnits[housing$after1950=="TRUE"],housing$logValue[housing$after1950=="TRUE"], use = "complete.obs")
cor(housing$logUnits[housing$after1950=="FALSE"],housing$logValue[housing$after1950=="FALSE"], use = "complete.obs")
housing$logUnits<-housing$UnitCount <-as.numeric(log(housing$UnitCount))
housing$logValue<-housing$logValue <-as.numeric(log(housing$Value))
summary(housing$logValue)
cor(housing$logUnits,housing$logValue, use = "complete.obs")
cor(housing$logUnits[housing$Borough=="Manhattan"],housing$logValue[housing$Borough=="Manhattan"], use = "complete.obs")
cor(housing$logUnits[housing$Borough=="Brooklyn"],housing$logValue[housing$Borough=="Brooklyn"], use = "complete.obs")
cor(housing$logUnits[housing$after1950=="TRUE"],housing$logValue[housing$after1950=="TRUE"], use = "complete.obs")
cor(housing$logUnits[housing$after1950=="FALSE"],housing$logValue[housing$after1950=="FALSE"], use = "complete.obs")
```
```{r}
#iv.
par(mfrow=c(1,2))
plot(housing$logUnits[housing$Borough=="Manhattan"],housing$logValue[housing$Borough=="Manhattan"],xlab ="logUnits",ylab = "logValue",main="Manhattan" )
plot(housing$logUnits[housing$Borough=="Brooklyn"],housing$logValue[housing$Borough=="Brooklyn"],xlab ="logUnits",ylab = "logValue",main="Brooklyn" )
cor(housing$logUnits,housing$logValue, use = "complete.obs")
cor(housing$logUnits[housing$Borough=="Manhattan"],housing$logValue[housing$Borough=="Manhattan"], use = "complete.obs")
cor(housing$logUnits[housing$Borough=="Brooklyn"],housing$logValue[housing$Borough=="Brooklyn"], use = "complete.obs")
cor(housing$logUnits[housing$after1950=="TRUE"],housing$logValue[housing$after1950=="TRUE"], use = "complete.obs")
cor(housing$logUnits[housing$after1950=="FALSE"],housing$logValue[housing$after1950=="FALSE"], use = "complete.obs")
cor(housing$logUnits,housing$logValue, use = "complete.obs")
median(housing$Value[housing$Borough=="Manhattan"],na.rm = TRUE)
median(housing$Value[housing$Borough=="Bronx"],na.rm = TRUE)
median(housing$Value[housing$Borough=="Staten Island"],na.rm = TRUE)
median(housing$Value[housing$Borough=="Brooklyn"],na.rm = TRUE)
median(housing$Value[housing$Borough=="Queens"],na.rm = TRUE)
boxplot(housing$logValue~housing$Borough,ylab="logValue")
median(housing$Value[housing$Borough=="Manhattan"],na.rm = TRUE)
par(mfrow=c(1,2))
plot(housing$logUnits[housing$Borough=="Manhattan"],housing$logValue[housing$Borough=="Manhattan"],xlab ="logUnits",ylab = "logValue",main="Manhattan" )
plot(housing$logUnits[housing$Borough=="Brooklyn"],housing$logValue[housing$Borough=="Brooklyn"],xlab ="logUnits",ylab = "logValue",main="Brooklyn" )
cor(housing$logUnits,housing$logValue, use = "complete.obs")
filename <- "~/Downloads/NYChousing.csv"
housing<-read.csv(file = filename,header = TRUE)
c(nrow(housing),ncol(housing))
apply(is.na(housing), 2, sum)
housingvalue_no_na<-subset(housing, housing$Value != "NA")
nrow(housing)-nrow(housingvalue_no_na)
housing$logValue<-housing$logValue<-as.numeric(log(housing$Value))
summary(housing$logValue)
housing$logUnits<-housing$UnitCount <-as.numeric(log(housing$UnitCount))
housing$after1950<-as.character(ifelse(housing$YearBuilt == "1950"|housing$YearBuilt > "1950", "TRUE", "FALSE"))
plot(housing$logUnits,housing$logValue,xlab ="logUnits",ylab = "logValue" )
plot(housing$logUnits, housing$logValue, col = factor(housing$after1950),
xlab = "log of Property Units", ylab = "log of Property Value")
legend("bottomright", legend=levels(factor(housing$after1950)),
fill=unique(factor(housing$after1950)))
cor(housing$logUnits,housing$logValue, use = "complete.obs")
cor(housing$logUnits[housing$Borough=="Manhattan"],housing$logValue[housing$Borough=="Manhattan"], use = "complete.obs")
cor(housing$logUnits[housing$Borough=="Brooklyn"],housing$logValue[housing$Borough=="Brooklyn"], use = "complete.obs")
cor(housing$logUnits[housing$after1950=="TRUE"],housing$logValue[housing$after1950=="TRUE"], use = "complete.obs")
cor(housing$logUnits[housing$after1950=="FALSE"],housing$logValue[housing$after1950=="FALSE"], use = "complete.obs")
par(mfrow=c(1,2))
plot(housing$logUnits[housing$Borough=="Manhattan"],housing$logValue[housing$Borough=="Manhattan"],xlab ="logUnits",ylab = "logValue",main="Manhattan" )
plot(housing$logUnits[housing$Borough=="Brooklyn"],housing$logValue[housing$Borough=="Brooklyn"],xlab ="logUnits",ylab = "logValue",main="Brooklyn" )
manhat.props <- c()
for (props in 1:nrow(housing)) {
if (housing$Borough[props] == "Manhattan") {
manhat.props <- c(manhat.props, props)
}
}
med.value <- c()
for (props in manhat.props) {
med.value <- c(med.value, housing$Value[props])
}
med.value <- median(med.value, na.rm = TRUE)
med.value
median(housing$Value[housing$Borough=="Manhattan"],na.rm = TRUE)
boxplot(housing$logValue~housing$Borough,ylab="logValue")
median(housing$Value[housing$Borough=="Manhattan"],na.rm = TRUE)
median(housing$Value[housing$Borough=="Bronx"],na.rm = TRUE)
median(housing$Value[housing$Borough=="Staten Island"],na.rm = TRUE)
median(housing$Value[housing$Borough=="Brooklyn"],na.rm = TRUE)
median(housing$Value[housing$Borough=="Queens"],na.rm = TRUE)
tapply(housing$Value, housing$Borough, median)
filename <- "~/Downloads/ckm_nodes-1.csv"
nodes<- read.csv(file=filename, header=T)
index_num<-which(nodes$adoption_date%in%c(1:17,"Inf"))
nodes<-nodes[index_num,]
filename <- "~/Downloads/ckm_network-1.txt"
network<- read.table(file=filename, header=F)
A<-network[index_num,index_num]
filename <- "~/Downloads/ckm_nodes-1.csv"
nodes<- read.csv(file=filename, header=T)
index_num<-which(nodes$adoption_date%in%c(1:17,"Inf"))
nodes<-nodes[index_num,]
filename <- "~/Downloads/ckm_network-1.txt"
network<- read.table(file=filename, header=F)
A<-network[index_num,index_num]
```
```{r}
#1.
adopters<-function(month,not.yet=FALSE,data=nodes){
if(not.yet==FALSE)
return(which(nodes$adoption_date==month))
if(not.yet==TRUE)
return(which(nodes$adoption_date>month))
}
adopters(2)
adopters(month = 14, not.yet = TRUE)
B<-apply(data.frame(A), 1, sum)
B<-as.vector(B)
B[41]
count_peer_pressure<-function(indnum,month){
return(length(which(A[indnum]==1&nodes$adoption_date<=month)))
}
count_peer_pressure(37,5)
prop_peer_pressure<-function(indnum,month){
return(length(which(A[indnum]==1&nodes$adoption_date<=month))/B[indnum])}
prop_peer_pressure(37,5)
prop_peer_pressure(102,14)
avg<-function(month){
prop_peer_pressure1<-function(indnum,month){
return(length(which(A[indnum]==1&nodes$adoption_date==month))/B[indnum])}
t1<-mean(mapply(prop_peer_pressure1, 1:125, month),na.rm = T)
prop_peer_pressure2<-function(indnum,month){
return(length(which(A[indnum]==1&nodes$adoption_date>month))/B[indnum])}
t2<-mean(mapply(prop_peer_pressure2, 1:125, month),na.rm = T)
return(c(t1,t2))
}
